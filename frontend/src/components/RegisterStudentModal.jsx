import { useState, useRef } from 'react';
import { registerStudent } from '../assets/services/api';
import { useToast } from '../contexts/ToastContext';

const RegisterStudentModal = ({ isOpen, onClose, onSuccess }) => {
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    father_name: '',
    mother_name: '',
    school: '',
    email_id: '',
    student_class: '',
    class_roll: '',
    gender: 'male',
    phone: '',
    entry_fee: '40',
    registered_by: null
  });
  const [phoneError, setPhoneError] = useState('');
  const phoneInputRef = useRef(null);
  const [schoolInputType, setSchoolInputType] = useState('select'); // 'select' or 'custom'
  const { success, error } = useToast();

  // Pre-set schools
  const presetSchools = [
    '‡¶Ü‡¶¨‡ßç‡¶¨‡¶æ‡¶∏ ‡¶Ü‡¶≤‡ßÄ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶∞‡¶æ‡¶ú‡¶∞‡¶æ‡¶ú‡ßá‡¶∂‡ßç‡¶¨‡¶∞ ‡¶ì‡¶Æ‡¶∞ ‡¶Ü‡¶≤‡ßÄ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ö‡¶∞‡¶≠‡ßü‡¶∞‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ö‡¶∞‡¶ï‡ßÅ‡¶Æ‡¶æ‡¶∞‡¶ø‡ßü‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ö‡¶∞‡¶ï‡ßÅ‡¶Æ‡¶æ‡¶∞‡¶ø‡ßü‡¶æ ‡¶¨‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ö‡¶∞‡¶ï‡ßÅ‡¶Æ‡¶æ‡¶∞‡¶ø‡ßü‡¶æ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡ßü‡¶æ ‡¶´‡¶æ‡¶ú‡¶ø‡¶≤ ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ',
    '‡¶ö‡¶∞‡¶≠‡¶æ‡¶ó‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ï‡¶æ‡¶∞‡ßç‡¶§‡¶ø‡¶ï‡¶™‡ßÅ‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶¶‡¶æ‡¶∞‡ßÅ‡¶∏ ‡¶∏‡¶æ‡¶π‡¶æ‡¶¨‡¶æ ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤ ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ',
    '‡¶Æ‡¶®‡ßã‡ßü‡¶æ‡¶∞‡¶æ ‡¶∂‡¶ø‡¶ï‡¶¶‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶∂‡¶π‡ßÄ‡¶¶ ‡¶¨‡ßÅ‡¶¶‡ßç‡¶ß‡¶ø‡¶ú‡ßÄ‡¶¨‡¶ø ‡¶°‡¶æ. ‡¶π‡ßÅ‡¶Æ‡¶æ‡ßü‡ßÅ‡¶® ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶â‡¶É ‡¶§‡¶æ‡¶É ‡¶Æ‡¶π‡¶ø‡¶â‡¶∏‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π ‡¶á‡¶∏‡¶É ‡¶¶‡¶æ‡¶É ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ',
    '‡¶è‡¶∏‡¶á‡¶è‡¶∏‡¶°‡¶ø‡¶™‡¶ø ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶∏‡¶æ‡¶ú‡¶®‡¶™‡ßÅ‡¶∞ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡ßü‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶∏‡¶æ‡¶ú‡¶®‡¶™‡ßÅ‡¶∞ ‡¶¨‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶¶‡¶æ‡¶∞‡ßÅ‡¶® ‡¶®‡¶æ‡¶ú‡¶æ‡¶§ ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ ‡¶ï‡¶Æ‡¶™‡ßç‡¶≤‡ßá‡¶ï‡ßç‡¶∏',
    '‡¶ö‡¶∞‡¶ö‡¶æ‡¶®‡ßç‡¶¶‡ßç‡¶∞‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶≠‡ßá‡¶¶‡ßá‡¶∞‡¶ó‡¶û‡ßç‡¶ú ‡¶π‡ßá‡¶ü‡¶ï‡ßã‡ßü‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶™‡¶æ‡¶á‡¶≤‡¶ü ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶Ü‡¶∏‡¶æ‡¶¶ ‡¶™‡¶æ‡¶¨‡¶≤‡¶ø‡¶ï ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤',
    '‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡ßü‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶¶‡ßÅ‡¶≤‡¶æ‡¶∞‡¶ö‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶¨‡¶ô‡ßç‡¶ó‡¶¨‡¶®‡ßç‡¶ß‡ßÅ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶∞‡¶æ‡¶Æ‡¶≠‡¶¶‡ßç‡¶∞‡¶™‡ßÅ‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶á‡¶â‡¶∞‡ßã ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶´‡¶æ‡¶â‡¶®‡ßç‡¶°‡ßá‡¶∂‡¶®',
    '‡¶®‡¶æ‡¶∞‡¶æ‡ßü‡¶®‡¶™‡ßÅ‡¶∞ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶™‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶´‡¶ø‡¶ï ‡¶≤‡ßç‡¶Ø‡¶æ‡¶¨‡ßá‡¶ü‡¶∞‡¶ø ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶ö‡¶∞‡¶´‡¶ø‡¶≤‡¶ø‡¶ú ‡¶ú‡ßü‡¶®‡¶¨ ‡¶π‡¶æ‡¶á‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶è‡¶®‡ßç‡¶° ‡¶ï‡¶≤‡ßá‡¶ú',
    '‡¶ï‡¶ø‡¶∞‡¶£ ‡¶®‡¶ó‡¶∞ ‡¶Ü‡¶¶‡¶∞‡ßç‡¶∂ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü',
    '‡¶´‡ßü‡¶ú‡ßÅ‡¶® ‡¶ï‡¶∞‡¶ø‡¶Æ ‡¶Æ‡ßá‡¶Æ‡ßã‡¶∞‡¶ø‡ßü‡¶æ‡¶≤ ‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶è‡¶®‡ßç‡¶° ‡¶ï‡¶≤‡ßá‡¶ú',
    '‡¶Ü‡¶É ‡¶ó‡¶£‡¶ø ‡¶π‡¶æ‡¶á ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤',
    '‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞ ‡¶∏‡ßã‡¶≤‡¶æ‡¶á‡¶Æ‡¶æ‡¶®‡¶ø‡ßü‡¶æ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡ßü‡¶æ ‡¶¶‡¶æ‡¶É ‡¶Æ‡¶æ‡¶É',
    '‡¶¶‡¶É ‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡¶ø‡¶ï ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü'

  ];

  // Pre-set classes (restricted to 6‚Äì10)
  const presetClasses = ['6', '7', '8', '9', '10'];

  // Helper: Convert English digits to Bengali digits
  const toBengaliDigits = (value) => String(value).replace(/[0-9]/g, (d) => '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'[d]);

  // Get admin ID from localStorage
  const getAdminId = () => {
    const token = localStorage.getItem('token');
    if (token) {
      try {
        const payload = JSON.parse(atob(token.split('.')[1]));
        return payload.id;
      } catch (err) {
        console.error('Error parsing token:', err);
        return null;
      }
    }
    return null;
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    if (name === 'phone' && phoneError) {
      setPhoneError('');
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Validation (Required: name, school, class, phone)
    if (!formData.name || !formData.school || !formData.student_class) {
      error('‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®: ‡¶®‡¶æ‡¶Æ, ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤, ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø');
      return;
    }

    // Phone validation: mandatory and must be exactly 11 digits
    const trimmedPhone = (formData.phone || '').trim();
    if (!trimmedPhone) {
      const msg = 'üì± ‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá';
      setPhoneError(msg);
      error(msg);
      if (phoneInputRef.current) {
        phoneInputRef.current.focus();
      }
      return;
    }
    
    if (!/^\d{11}$/.test(trimmedPhone)) {
      const msg = '‚ùå ‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶Ø‡¶º! ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡ßß‡ßß ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡¶ø ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: 01712345678)';
      setPhoneError(msg);
      error(msg);
      if (phoneInputRef.current) {
        phoneInputRef.current.focus();
      }
      return;
    }
    
    if (!trimmedPhone.startsWith('01')) {
      const msg = '‚ùå ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡¶ø ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡ß¶‡ßß ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶§‡ßá ‡¶π‡¶¨‡ßá (‡¶Ø‡ßá‡¶Æ‡¶®: 01712345678)';
      setPhoneError(msg);
      error(msg);
      if (phoneInputRef.current) {
        phoneInputRef.current.focus();
      }
      return;
    }
    
    setPhoneError('');

    // Ensure entry fee is a valid number, default to 40 if empty
    const entryFeeToSend = formData.entry_fee && /^\d+(\.\d{1,2})?$/.test(formData.entry_fee)
      ? formData.entry_fee
      : '40';

    try {
      setLoading(true);
      
      // Get admin ID from token
      const adminId = getAdminId();
      
      // Prepare data with admin ID; phone is now mandatory
      const registrationData = {
        ...formData,
        phone: trimmedPhone,
        entry_fee: entryFeeToSend,
        registered_by: adminId
      };
      
      const response = await registerStudent(registrationData);
      
      success('‡¶õ‡¶æ‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶∏‡¶´‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!');
      onSuccess(response);
      onClose();
      
      // Reset form
      setFormData({
        name: '',
        father_name: '',
        mother_name: '',
        school: '',
        email_id: '',
        student_class: '',
        class_roll: '',
        gender: 'male',
        phone: '',
        entry_fee: '40',
        registered_by: null
      });
      setPhoneError('');
      setSchoolInputType('select');
    } catch (err) {
      const msg = err?.error || err?.message || '‡¶õ‡¶æ‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá';
      error(msg);
    } finally {
      setLoading(false);
    }
  };

  const handleClose = () => {
    setFormData({
      name: '',
      father_name: '',
      mother_name: '',
      school: '',
      email_id: '',
      student_class: '',
      class_roll: '',
      gender: 'male',
      phone: '',
      entry_fee: '40',
      registered_by: null
    });
    setSchoolInputType('select');
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4">
      <div className="bg-white/95 backdrop-blur-xl border border-green-500/30 rounded-3xl shadow-2xl shadow-green-500/25 max-w-2xl w-full max-h-[90vh] overflow-hidden">
        {/* Header */}
        <div className="bg-gradient-to-r from-green-500/10 to-emerald-500/10 border-b border-green-500/20 p-6">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-2xl font-bold text-gray-800" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                ‡¶®‡¶§‡ßÅ‡¶® ‡¶õ‡¶æ‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶®
              </h2>
              <p className="text-gray-600 text-sm mt-1" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                ‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
              </p>
            </div>
            <button
              onClick={handleClose}
              className="text-gray-500 hover:text-gray-700 transition-colors p-2 hover:bg-white/50 rounded-full"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>

        {/* Form */}
        <div className="p-6 overflow-y-auto max-h-[60vh]">
          <form onSubmit={handleSubmit} className="space-y-4">
            {/* Personal Information */}
            <div className="bg-blue-50/50 border border-blue-200/50 rounded-xl p-4">
              <h3 className="text-lg font-semibold text-gray-800 mb-4" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ *
                  </label>
                  <input
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡ßá‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ"
                    required
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶™‡¶ø‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ
                  </label>
                  <input
                    type="text"
                    name="father_name"
                    value={formData.father_name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶™‡¶ø‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶Æ‡¶æ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ
                  </label>
                  <input
                    type="text"
                    name="mother_name"
                    value={formData.mother_name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶Æ‡¶æ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶≤‡¶ø‡¶ô‡ßç‡¶ó
                  </label>
                  <select
                    name="gender"
                    value={formData.gender}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  >
                    <option value="male">‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑</option>
                    <option value="female">‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ</option>
                  </select>
                </div>
              </div>
            </div>

            {/* Academic Information */}
            <div className="bg-green-50/50 border border-green-200/50 rounded-xl p-4">
              <h3 className="text-lg font-semibold text-gray-800 mb-4" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ *
                  </label>
                  
                  {/* School Input Type Toggle */}
                  <div className="flex space-x-2 mb-2">
                    <button
                      type="button"
                      onClick={() => setSchoolInputType('select')}
                      className={`px-3 py-1 text-sm rounded-lg transition-all ${
                        schoolInputType === 'select'
                          ? 'bg-green-500 text-white'
                          : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                      }`}
                      style={{ fontFamily: "'Hind Siliguri', sans-serif" }}
                    >
                      ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®
                    </button>
                    <button
                      type="button"
                      onClick={() => setSchoolInputType('custom')}
                      className={`px-3 py-1 text-sm rounded-lg transition-all ${
                        schoolInputType === 'custom'
                          ? 'bg-green-500 text-white'
                          : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                      }`}
                      style={{ fontFamily: "'Hind Siliguri', sans-serif" }}
                    >
                      ‡¶®‡¶ø‡¶ú‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®
                    </button>
                  </div>

                  {/* School Input Field */}
                  {schoolInputType === 'select' ? (
                    <select
                      name="school"
                      value={formData.school}
                      onChange={handleInputChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                      required
                    >
                      <option value="">‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                      {presetSchools.map((school, index) => (
                        <option key={index} value={school}>
                          {school}
                        </option>
                      ))}
                    </select>
                  ) : (
                    <input
                      type="text"
                      name="school"
                      value={formData.school}
                      onChange={handleInputChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                      placeholder="‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
                      required
                    />
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ *
                  </label>
                  <select
                    name="student_class"
                    value={formData.student_class}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    required
                  >
                    <option value="">‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    {presetClasses.map((cls) => (
                      <option key={cls} value={cls}>
                        {toBengaliDigits(cls)}‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ
                      </option>
                    ))}
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
                  </label>
                  <input
                    type="text"
                    name="class_roll"
                    value={formData.class_roll}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶á‡¶Æ‡ßá‡¶á‡¶≤
                  </label>
                  <input
                    type="email"
                    name="email_id"
                    value={formData.email_id}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ"
                  />
                </div>
              </div>
            </div>

            {/* Contact & Payment Information */}
            <div className="bg-yellow-50/50 border border-yellow-200/50 rounded-xl p-4">
              <h3 className="text-lg font-semibold text-gray-800 mb-4" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ì ‡¶´‡¶ø ‡¶§‡¶•‡ßç‡¶Ø
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ *
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    ref={phoneInputRef}
                    aria-invalid={!!phoneError}
                    inputMode="numeric"
                    title="‡ßß‡ßß ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: 01712345678)"
                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:border-transparent ${phoneError ? 'border-red-500 focus:ring-red-500' : 'border-gray-300 focus:ring-green-500'}`}
                    placeholder="‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ (‡¶Ø‡ßá‡¶Æ‡¶®: 01712345678)"
                    required
                  />
                  {phoneError && (
                    <p className="mt-1 text-sm text-red-600" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                      {phoneError}
                    </p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: "'Hind Siliguri', sans-serif" }}>
                    ‡¶™‡ßç‡¶∞‡¶¨‡ßá‡¶∂ ‡¶´‡¶ø (‡ß≥) *
                  </label>
                  <input
                    type="number"
                    name="entry_fee"
                    value={formData.entry_fee}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
                    placeholder="‡¶™‡ßç‡¶∞‡¶¨‡ßá‡¶∂ ‡¶´‡¶ø"
                    min="0"
                    step="0.01"
                    required
                  />
                </div>
              </div>
            </div>
          </form>
        </div>

        {/* Footer */}
        <div className="bg-gray-50/80 border-t border-gray-200/50 p-6">
          <div className="flex justify-end space-x-3">
            <button
              type="button"
              onClick={handleClose}
              className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-all font-medium"
              style={{ fontFamily: "'Hind Siliguri', sans-serif" }}
            >
              ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤
            </button>
            <button
              onClick={handleSubmit}
              disabled={loading}
              className="px-6 py-2 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-lg hover:from-green-600 hover:to-emerald-600 transition-all font-medium shadow-lg shadow-green-500/25 disabled:opacity-50 disabled:cursor-not-allowed"
              style={{ fontFamily: "'Hind Siliguri', sans-serif" }}
            >
              {loading ? '‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶π‡¶ö‡ßç‡¶õ‡ßá...' : '‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RegisterStudentModal;
