#!/usr/bin/env python3
"""
Test script for Flask PDF Service templates
"""

import requests
import json
import os
from datetime import datetime

# Test data for question paper
question_paper_data = {
    "exam": {
        "title": "‡¶Æ‡ßá‡¶ß‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ - ‡ß®‡ß¶‡ß®‡ß´",
        "class_name": "‡¶¶‡¶∂‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ",
        "year": 2025,
        "question_count": 2
    },
    "exam_set": {
        "set_number": 1,
        "set_name": "Set A",
        "total_marks": 60,
        "duration_minutes": 90,
        "questions": [
            {
                "qno": 1,
                "question": "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶∞‡¶æ‡¶ú‡¶ß‡¶æ‡¶®‡ßÄ ‡¶ï‡ßã‡¶®‡¶ü‡¶ø?",
                "options": {
                    "A": "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ",
                    "B": "‡¶¢‡¶æ‡¶ï‡¶æ",
                    "C": "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ",
                    "D": "‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ"
                }
            },
            {
                "qno": 2,
                "question": "‡ß® + ‡ß® = ‡¶ï‡¶§?",
                "options": {
                    "A": "‡ß©",
                    "B": "‡ß™",
                    "C": "‡ß´",
                    "D": "‡ß¨"
                }
            }
        ],
        "answer_key": {
            "1": "B",
            "2": "B"
        }
    },
    "customization": {
        "header_options": {
            "organization_name": "‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶§‡¶æ‡¶∞‡¶æ‡¶¨‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ ‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶∏‡¶Ç‡¶ó‡¶†‡¶®",
            "show_logo": True
        },
        "template_type": "compact_bengali",
        "paper_size": "A4",
        "orientation": "portrait"
    }
}

# Test data for scholarship
scholarship_data = {
    "class_name": "‡¶¶‡¶∂‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ",
    "students": [
        {
            "serial_no": 1,
            "name": "‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®",
            "school": "‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶§‡¶æ‡¶∞‡¶æ‡¶¨‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º",
            "roll_number": "UTS001"
        },
        {
            "serial_no": 2,
            "name": "‡¶´‡¶æ‡¶§‡ßá‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®",
            "school": "‡¶¶‡¶ï‡ßç‡¶∑‡¶ø‡¶£ ‡¶§‡¶æ‡¶∞‡¶æ‡¶¨‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º",
            "roll_number": "DTS002"
        },
        {
            "serial_no": 3,
            "name": "‡¶ï‡¶∞‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®",
            "school": "‡¶™‡ßÇ‡¶∞‡ßç‡¶¨ ‡¶§‡¶æ‡¶∞‡¶æ‡¶¨‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º",
            "roll_number": "PTS003"
        }
    ],
    "exam_name": "‡¶â‡¶™‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ - ‡ß®‡ß¶‡ß®‡ß´",
    "organization_name": "‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶§‡¶æ‡¶∞‡¶æ‡¶¨‡ßÅ‡¶®‡¶ø‡¶Ø‡¶º‡¶æ ‡¶õ‡¶æ‡¶§‡ßç‡¶∞-‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶∏‡¶Ç‡¶ó‡¶†‡¶®",
    "motto": "‡¶¶‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø‡¶≠‡¶ô‡ßç‡¶ó‡¶ø ‡¶¨‡¶¶‡¶≤‡¶æ‡¶®, ‡¶ú‡ßÄ‡¶¨‡¶® ‡¶¨‡¶¶‡¶≤‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá",
    "established_year": "2004 ‡¶á‡¶Ç",
    "location": "Uttar Tarabunia, Sadar Upazila, Shariatpur, Bangladesh."
}

def test_question_paper():
    """Test question paper PDF generation"""
    print("üß™ Testing Question Paper PDF Generation...")
    
    try:
        response = requests.post(
            'http://localhost:8000/generate-question-paper/download',
            json=question_paper_data,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        if response.status_code == 200:
            # Save PDF
            filename = f"test_question_paper_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
            with open(filename, 'wb') as f:
                f.write(response.content)
            print(f"‚úÖ Question Paper PDF generated successfully: {filename}")
            print(f"   Size: {len(response.content)} bytes")
            return True
        else:
            print(f"‚ùå Question Paper PDF generation failed: {response.status_code}")
            print(f"   Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error testing question paper: {e}")
        return False

def test_scholarship_pdf():
    """Test scholarship PDF generation"""
    print("\nüß™ Testing Scholarship PDF Generation...")
    
    try:
        response = requests.post(
            'http://localhost:8000/generate-scholarship-pdf/download',
            json=scholarship_data,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        if response.status_code == 200:
            # Save PDF
            filename = f"test_scholarship_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
            with open(filename, 'wb') as f:
                f.write(response.content)
            print(f"‚úÖ Scholarship PDF generated successfully: {filename}")
            print(f"   Size: {len(response.content)} bytes")
            return True
        else:
            print(f"‚ùå Scholarship PDF generation failed: {response.status_code}")
            print(f"   Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error testing scholarship: {e}")
        return False

def test_health():
    """Test service health"""
    print("üè• Testing Service Health...")
    
    try:
        response = requests.get('http://localhost:8000/health', timeout=10)
        
        if response.status_code == 200:
            health_data = response.json()
            print(f"‚úÖ Service is healthy: {health_data['status']}")
            print(f"   Framework: {health_data['framework']}")
            print(f"   Version: {health_data['version']}")
            return True
        else:
            print(f"‚ùå Service health check failed: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error checking service health: {e}")
        return False

def main():
    """Run all tests"""
    print("üöÄ Flask PDF Service Template Tests")
    print("=" * 50)
    
    # Test service health first
    if not test_health():
        print("\n‚ùå Service is not healthy. Please start the Flask service first.")
        return
    
    # Test question paper
    question_success = test_question_paper()
    
    # Test scholarship
    scholarship_success = test_scholarship_pdf()
    
    # Summary
    print("\n" + "=" * 50)
    print("üìä Test Results Summary:")
    print(f"   Health Check: ‚úÖ")
    print(f"   Question Paper: {'‚úÖ' if question_success else '‚ùå'}")
    print(f"   Scholarship PDF: {'‚úÖ' if scholarship_success else '‚ùå'}")
    
    if question_success and scholarship_success:
        print("\nüéâ All tests passed! Both templates are working correctly.")
        print("   Your Flask PDF service is ready for production use.")
    else:
        print("\n‚ö†Ô∏è  Some tests failed. Please check the error messages above.")

if __name__ == "__main__":
    main()
